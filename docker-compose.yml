version: '3.8'

services:
  backend:
    build:
      context: ./backend/tama_backend
      dockerfile: Dockerfile
    volumes:
      - ./backend/tama_backend:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    env_file:
      - .env
    depends_on:
      - db
      - redis
    networks:
      - internal

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    expose:
      - "5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - frontend_dist:/app/dist
    environment:
      - NODE_ENV=${ENVIRONMENT}
    depends_on:
      - backend
    networks:
      - internal
    command: ["/app/entrypoint.sh"]

  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
        - internal

  redis:
    image: redis:alpine
    networks:
      - internal

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "443:443"
    volumes:
      - ./nginx:/etc/nginx
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - frontend_dist:/usr/share/nginx/html
    depends_on:
      - frontend
      - backend
    environment:
      - NGINX_CONFIG=${ENVIRONMENT}
      - NGINX_SERVER_NAME=${NGINX_SERVER_NAME}
      - NGINX_SERVER_DOMAIN=${NGINX_SERVER_DOMAIN}
    entrypoint: /wait-for-build.sh
    command: [ "nginx", "-g", "daemon off;" ]
    networks:
      - internal

networks:
  internal:
    driver: bridge

volumes:
  static_volume:
  media_volume:
  frontend_dist:
